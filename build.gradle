/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'jimmy' at '1/6/14 9:28 PM' with Gradle 1.10
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.10/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
// In this section you declare the dependencies for your production and test code
dependencies {
    //runtime files('lib/a.jar', 'libs/b.jar')
    //runtime fileTree(dir: 'lib', include: '*.jar')
    // The production code uses the Log4J logging API at compile time
    compile fileTree(dir: 'lib', includes: ['*.jar'])
    compile group: 'commons-logging', name: 'commons-logging', version: '1.1.1'
    compile group: 'log4j', name: 'log4j', version: '1.2.16'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
}

// Specify which main class for 'gradle run'
mainClassName = "com.ibm.ftm.HelloWebDriver"
